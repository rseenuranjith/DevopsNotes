Implementation Procedure :
========================
put the host entry in all the machine if DNS is not configured or configure proper dns server in your server infrastructure.

192.168.93.12	puppet1.cnl.com	puppet1 ==========> Puppet server 
192.168.93.13	puppet2.cnl.com	puppet2

****************************From puppet master server****************************
yum install epel-relese puppet-server -y

systemctl restart puppetmaster
systemctl status puppetmaster
systemctl enable puppetmaster

systemctl stop firewalld
systemctl disable firewalld

netstat -tulpn | grep 8140
****************************from puppet client machine ****************************
yum install epel-release puppet -y

systemctl restart puppet
systemctl status puppet
systemctl enable puppet

systemctl stop firewalld
systemctl disable firewalld
***********************************************

in client machine
vim /etc/puppet/puppet.conf

***************************************************

go to puppet client machine

vim /etc/puppet/puppet.conf

[agent]

    server=puppet1.cnl.com

save and quit the file

then execute the following command in the client machine

[root@puppet2 ~]# puppet agent -t           ----> will establich a certifciate with the server 
Exiting; no certificate found and waitforcert is disabled

*************************************go to puppet server **************************
[root@puppet1 ~]# puppet cert list
  "puppet2.cnl.com" (SHA256) E7:21:E5:A0:95:F9:16:DD:97:85:A4:A6:3D:5D:AA:98:81:59:C6:59:CF:12:16:33:EF:45:12:12:02:F6:A6:BA
  
[root@puppet1 ~]# puppet cert sign puppet2.cnl.com
Notice: Signed certificate request for puppet2.cnl.com
Notice: Removing file Puppet::SSL::CertificateRequest puppet2.cnl.com at '/var/lib/puppet/ssl/ca/requests/puppet2.cnl.com.pem'

[root@puppet1 ~]# puppet cert list
*****************************************from client machine**************
[root@puppet2 ~]# puppet agent -t
Info: Retrieving pluginfacts
Info: Retrieving plugin
Info: Caching catalog for puppet2.cnl.com
Info: Applying configuration version '1526403998'
Notice: Finished catalog run in 0.01 seconds

******************************************from client machine ***************************************


[root@puppet2 ~]# puppet resource --types

create any .pp file and run the following command


[root@puppet2 ~]# cat user.pp
user { 'tss':
  ensure           => 'present',
  comment          => 'Account used by the trousers package to sandbox the tcsd daemon',
  gid              => '59',
  home             => '/dev/null',
  password         => '!!',
  password_max_age => '-1',
  password_min_age => '-1',
  shell            => '/sbin/nologin',
  uid              => '59',
}


puppet apply user.pp


[root@puppet2 ~]# vim package.pp
package { 'httpd':
  ensure => 'present',
}



puppet apply package.pp


***********************************************now we are going to create a module in puppet server and when puppet client syncs with puppet server then automatically the rules will get applied****************************
rpm -qi httpd --> just to understand why we are giving the all the information while generating module

puppet module generate  puppet-runtest


cd puppet-runtest

vim metadata.jason

    {
      "name": "puppetlabs-stdlib",
      "version_range": ">= 1.0.0"
    }

	
	remove the above lines from the metadata.jason file.
	

	
vim manifest/init.pp

class runtest {

package { 'httpd':
  ensure => 'present',
}

package { 'nfs-utils':
  ensure => 'present',
}

service { 'httpd':
  ensure => 'running',
  enable => 'true',
  require => Package['httpd'],
}

user { 'ram':
      ensure=>'present',
      home=>'/home/ram',
      system => 'true',
}

file { '/home/ram':
      ensure=>'directory',
      owner=>'ram',
      group=>'ram',
      require=>User['ram'],
}

}




come to the following directory

[root@puppet1 ~]# ls -ltrh
total 4.0K
-rw-------. 1 root root 1.1K Feb 10 00:06 anaconda-ks.cfg
drwxr-xr-x. 5 root root   96 May 15 13:19 puppet-runtest
[root@puppet1 ~]# puppet module build puppet-runtest
Notice: Building /root/puppet-runtest for release
Module built: /root/puppet-runtest/pkg/puppet-runtest-0.1.0.tar.gz
[root@puppet1 ~]# pwd
/root

to check the installed modules

puppet module list

[root@puppet1 ~]# puppet module install puppet-runtest/pkg/puppet-runtest-0.1.0.tar.gz
Notice: Preparing to install into /etc/puppet/modules ...
Notice: Downloading from https://forgeapi.puppetlabs.com ...
Notice: Installing -- do not interrupt ...
/etc/puppet/modules
└── puppet-runtest (v0.1.0)




[root@puppet1 ~]# cat /etc/puppet/manifests/site.pp
node puppet2 {
  include runtest
}



**************************************from client machine run the puppet agent -t command***********************



[root@puppet2 ~]# puppet agent -t
Info: Retrieving pluginfacts
Info: Retrieving plugin
Info: Caching catalog for puppet2.cnl.com
Warning: The package type's allow_virtual parameter will be changing its default value from false to true in a future release. If you do not want to allow virtual packages, please explicitly set allow_virtual to false.
   (at /usr/share/ruby/vendor_ruby/puppet/type.rb:816:in `set_default')
Info: Applying configuration version '1526405146'
Notice: /Stage[main]/Runtest/Package[nfs-utils]/ensure: created
Notice: /Stage[main]/Runtest/User[ram]/ensure: created
Notice: /Stage[main]/Runtest/File[/home/ram]/ensure: created
Notice: /Stage[main]/Runtest/Package[httpd]/ensure: created
Notice: /Stage[main]/Runtest/Service[httpd]/ensure: ensure changed 'stopped' to 'running'
Info: /Stage[main]/Runtest/Service[httpd]: Unscheduling refresh on Service[httpd]
Notice: Finished catalog run in 41.88 seconds


********************************************************************************


#yum install git -y
#mkdir -p /usr/opt/git1
#chmod -R 777 /usr/opt/git1
#git init --bare --shared /usr/opt/git1/safebox.git
#useradd davidson
#passwd davidson
#su - davidson
$git clone /usr/opt/git1/safebox
$cd safebox
$cp /var/tmp/flex.pp .
git add *
$git config --global  user.name 'davidson'
$git config --global user.email 'davidson@puppet1.bbtest.com'
git status
git commit -m "i have just download flex.pp"
git push
$git config --global push.default simple



go to client machne and run the following commands

#yum install git puppet -y
#useradd leo
passwd leo
su - leo
#git clone root@puppet1:/usr/opt/git1/safebox (please if you are using google cloud please use some user name rather root id)
#cd safebox
#git pull
#puppet apply flex.pp

************************************************************************************************************************

#mkdir -p /usr/opt/git1
#chmod -R 777 /usr/opt/git1
#git init --bare --shared /usr/opt/git/safebox.git
#su - davidson
$git clone /usr/opt/git1/safebox
$cd safebox
$cp /var/tmp/flex.pp .
$git config --global  user.name 'davidson'
$git config --global user.email 'davidson@puppet1.bbtest.com'
$git config --global default.push simple
$git add package.pp
$git commit -m "Initial"
git config --global default.push simple
$git push


puppet2
#yum install git puppet -y
#cd /opt
#git clone root@puppet1:/usr/opt/git1/safebox
#cd safebox
#git pull
#puppet apply flex.pp