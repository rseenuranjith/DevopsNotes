We need the following lab setup with centos7 with minimal install only
 
1.	ansible.cnl.com – 1 CPU – 512 MB RAM (Python 2.7)
2.	node1.cnl.com – 1 CPU – 512 MB RAM ( python 2.6 and above)
3.	node2.cnl.com – 1 CPU – 512 MB RAM ( python 2.6 and above)

Pre-requisites  - in all 3 machines

1.	Install epel-release repository in all machines

#yum install epel-release -y

2.	Install vim package in all 3 machines

# yum install vim -y

3.	Add the following in /etc/hosts file in all 3 machines

192.168.93.11		ansible.cnl.com	ansible
192.168.93.12		node1.cnl.com	node1
192.168.93.13		node2.cnl.com	node2

 
4.	Create user called ansible in all machines
#useradd ansible

5.	Set password for ansible user in all machines
#passwd ansible

Enter the password as Redhat

6.	Login to all servers and enable sudo permission for ansible user with no password

Run visudo command

ansible ALL=(ALL)       NOPASSWD:       ALL


7.	Login as ansible user into ansible server
8.	Create ssh keys in ansible server

[ansible@aserver ~]$ ssh-keygen

 
9.	From ansible server,from ansible user using ssh-copy-id command exchange the ssh keys to node1,node2 servers.

 
10.	Test the ssh keys are working or not ? how ?.ssh to node1,node2 servers,while logging it shouldn’t ask any password.


4	   Login into ansible server using ansible user


  # sudo yum install ansible -y
                
	 
Make sure python-paramiko dependency should also be installed. paramiko package after installed only we can maintain the older version clients.

	python-httplib2   this package only helps to monitor the urls via ansible
	python2-cryptography  this package will help you to validate and control all SSL certificates
	
           Post ansible package installation try to test the ansible  weather working or not ?
               ansible --version
	 
      If you get an error ,then update the cryptography package.
         #yum update python-cryptography
 
5	Create your environment directories.
      Create dev directory. From ansible point of view this dev directory is considered as one environment.
 Create ansible.cfg file like below
   Vim ansible.cfg
      [defaults]
      inventory=hosts
      remote_user=ansible
      timeout=3000
  in hosts file add your servers like below. (static inventory file)
  
Vim hosts
 [prod]
node1
[backup]
node2

6	Test your ansible environment is correctly configured or not ?
ansible all --list

[root@aserver dev]# ansible all --list
  hosts (2):
    node1
    node2
	
	
7	Test your client servers connectivity from ansible ?


ansible all -m ping  --> you must receive ping / pong in green